{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","selectTabId","selectedTabId","tabs","onTabSelected","selectTab","find","tab","id","className","map","href","onClick","handleTabSelected","title","content","App","useState","setSelectTab","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAHUC,EAGX,EAHJC,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAYF,EAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOP,KAQhD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWF,EAAIC,KAAOP,EAAc,YAAc,GAFpD,SAIE,mBACEU,KAAI,WAAMJ,EAAIC,IACd,UAAQ,cACRI,QAAS,kBAlBG,SAACL,GACrBA,EAAIC,KAAOP,GACbG,EAAcG,GAgBWM,CAAkBN,IAHnC,SAKGA,EAAIO,SARFP,EAAIC,WAejB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,GAAaA,EAAUU,cCrCnBZ,EAAO,CAClB,CAAEK,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAkCC,mBAASd,EAAK,IAAhD,mBAAOE,EAAP,KAAkBa,EAAlB,KAEA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAUS,SAGhC,cAAC,EAAD,CACEZ,cAAeG,EAAUG,GACzBL,KAAMA,EACNC,cAAec,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ac00f84e.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  selectedTabId : string;\n  tabs : Tab[];\n  onTabSelected : (tab : Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  selectedTabId: selectTabId,\n  tabs,\n  onTabSelected,\n}) => {\n  const selectTab = tabs.find((tab) => tab.id === selectTabId);\n\n  const handleTabSelected = (tab : Tab) => {\n    if (tab.id !== selectTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={tab.id === selectTabId ? 'is-active' : ''}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"tab-content\"\n                onClick={() => handleTabSelected(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectTab && selectTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectTab, setSelectTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectTab.title}`}\n      </h1>\n\n      <Tabs\n        selectedTabId={selectTab.id}\n        tabs={tabs}\n        onTabSelected={setSelectTab}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}